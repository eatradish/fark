import { GroupBox, TabWidget, VerticalBox, HorizontalBox, Button, LineEdit, GridBox, ListView, StandardTableView, CheckBox } from "std-widgets.slint";

export component Fark inherits Window {
    title: "Fark";
    icon:  @image-url("../icon2.png");
    width: 800px;
    height: 500px;
    callback show-open-dialog;
    callback search;
    callback stop_search;
    callback open_file(int);
    callback open_directory(int);

    in property file_name <=> file_name.text;
    in property path <=> path.text;
    in property<[[StandardListViewItem]]> rows: [];
    in property <int> count: 0;
    in-out property current-row <=> list.current-row;
    in-out property <bool> started: false;
    in-out property glob <=> glob.checked;
    in-out property case <=> case.checked;
    in-out property unrestricted <=> unrestricted.checked;
     

    GroupBox {
        preferred_width: 800px;
        preferred_height: 500px;
        TabWidget {
            Tab {
                title: @tr("Name/Location");
                GridBox {
                    Row {
                        HorizontalBox {
                            Text {
                                vertical-alignment: center;
                                horizontal-alignment: left;
                                text: @tr("File Name:");
                                width: 10%;
                            }
                            
                            file_name := LineEdit {
                                width: 83%;
                            }
                        }
                    }

                    Row {
                        HorizontalBox {
                            Text {
                                vertical-alignment: center;
                                horizontal-alignment: left;
                                text: @tr("Location:");
                                width: 10%;
                            }
                            path := LineEdit {
                                width: 68%;
                            }
                            open_button := Button {
                                text: @tr("Browse...");
                                clicked => { root.show-open-dialog(); }
                                width: 15%;
                            }
                        }
                    }

                    Row {
                        HorizontalBox {
                            spacing: 30px;
                            alignment: center;
                            search := Button {
                                text: root.started ? @tr("Stop") : @tr("Search");
                                clicked => {
                                    if (!root.started) {
                                        root.started = true;
                                        root.search();
                                    } else {
                                        root.stop-search();
                                    }
                                }
                                width: 20%;
                            }
                            glob := CheckBox {
                                text: @tr("Glob");
                            }
                            case := CheckBox {
                                text: @tr("Case sensitive");
                            }
                            unrestricted := CheckBox {
                                text: @tr("Hidden files and folders");
                            }
                        }
                    }

                    Row {
                        list := StandardTableView {
                            width: 98%;
                            // height: 60%;
                            columns: [
                                { title: @tr("Name") },
                                { title: @tr("Parent") },
                                { title: @tr("Size") },
                                // { title: @tr("MIME-type") },
                            ];
                            rows: root.rows;
                            row-pointer-event(int, PointerEvent, point) => { 
                                if (PointerEvent.kind == PointerEventKind.down) {
                                    if (PointerEvent.button == PointerEventButton.left) {
                                        open-file(int);
                                    }

                                    if (PointerEvent.button == PointerEventButton.right) {
                                        open-directory(int);
                                    }
                                }
                            }
                        }
                    }

                    Row {
                        Text {
                            text: @tr("Found ") + root.count + @tr(" results");
                        }
                    }
                }
            }
        }
    }
}